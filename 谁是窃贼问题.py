#!/usr/bin/env python3
#-*- coding: utf-8 -*-

r'''
问题描述

警察审问4名窃贼嫌疑犯。现在已知，这4人当中仅有一名是窃贼，还知道这4个人中的每个人要么是诚实的，要么总是说谎。

这4个人给警察的回答如下。
甲说：“乙没有偷，是丁偷的。”
乙说：“我没有偷，是丙偷的。”
丙说：“甲没有偷，是乙偷的。”
丁说：“我没有偷。”

请根据这4个人的回答判断谁是窃贼。
问题分析

显然该题是一个逻辑推断问题。已知4个人中的每个人要么是诚实的，要么总是说谎，那么如何来判断他们到底谁是窃贼呢？

由问题描述可知，甲、乙、丙、丁4人中仅有一名窃贼，且这4个人中每个人要么是诚实的，要么总是说谎。分析甲、乙、丙3人所说的话可以发现，他们每人都说了两句话，即：“X没有偷，是Y偷的（其中，X、Y指代甲、乙、丙、丁中的某一个）”，因此，不论这3人是否说谎，他们所提到的这两个人中必有一个是窃贼。而丁只说了他自己没有偷，所以无法判断其真假。

假设用变量A、B、C、D分别代表4个人，变量的值为1代表该人是窃贼，则根据4个人的说法可列出下面的4个条件：
甲说：“乙没有偷，是丁偷的。” —— B+D=1 ①
乙说：“我没有偷，是丙偷的。” —— B+C=1 ②
丙说：“甲没有偷，是乙偷的。” —— A+B=1 ③
丁说：“我没有偷。”             —— A+B+C+D=1   ④

由于甲、乙、丙3人的话中都提到了2个人，其中必有一人是小偷，所以在根据他们的话列出条件表达式时，可以不关心谁说的是真话，谁说的是假话。

由于丁的话无法判断真假，所以根据丁的话列出的表达式只反映了4人中仅有一名是窃贼的条件。
算法设计

该问题的关键是使用C语言中的逻辑表达式将问题分析中得到的4个条件表达出来，逻辑表达式如下：
B+D==1 && B+C==1 && A+B==1 ⑤
条件④表示A、B、C、D中必有一个为1。

在程序中可依次假定甲、乙、丙、丁分别为窃贼，带入⑤进行测试，满足条件⑤的那个人为窃贼，具体如下：
先假定甲为窃贼，即A=1，B=0，C=0，D=0，带入条件⑤测试是否成立，若成立则不再对乙、丙、丁进行测试。
若不成立，则再假定乙为窃贼，即A=0，B=1，C=0，D=0，带入条件⑤测试是否成立，若成立则可确定乙为窃贼，不再对丙、丁进行测试。
若不成立，再假定丙为窃贼，即A=0，B=0，C=1，D=0，带入条件⑤测试是否成立，若成立则可确定丙为窃贼，不再对丁进行测试。
若不成立，再假定厂为窃贼，即A=0，B=0，C=0，D=1，带入条件⑤测试是否成立，若成立则确定丁为窃贼。
'''

list = [
		[1, 0, 0, 0],
		[0, 1, 0, 0],
		[0, 0, 1, 0],
		[0, 0, 0, 1]
]

i = 0
for l in list:
	i = i + 1
	if l[1] + l[3] == 1 and l[1] + l[2] == 1 and l[0] + l[1] == 1:
		break;
	
if i == 1:
	print('a')
elif i == 2:
	print('b')
elif i == 3:
	print('c')
elif i == 4:
	print('d')
else:
	print('error')
